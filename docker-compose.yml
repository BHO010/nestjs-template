# Docker Compose Configuration
# visit https://docs.docker.com/compose/

version: '3.8'
services:
  # app service for your backend
  app:
    container_name: app
    build:
      context: ./
      dockerfile: Dockerfile
      target: builder
    command: npm run start:dev
    volumes:
      - .:/app
      - /app/node_modules
    environment:
      SQL_DATABASE_NAME: nestjs_mysql
      SQL_DATABASE_USER: root
      SQL_DATABASE_PASSWORD: root
      SQL_DATABASE_PORT: 3306
      SQL_DATABASE_HOST: host.docker.internal
      MONGO_DATABASE_NAME: nestjs_mongodb
      MONGO_DATABASE_USER: admin
      MONGO_DATABASE_PASSWORD: password
      MONGO_DATABASE_URI: mongodb://mongodb:27017
    ports:
      - '3000:3000'
    depends_on:
      - mysql
      - mongo

  # start the mysql service as container
  mysql:
    image: mysql:latest
    container_name: mysql
    restart: always
    ports:
      - '3306:3306'
    environment:
      MYSQL_DATABASE: 'nestjs_mysql'
      MYSQL_ROOT_PASSWORD: 'root'
    volumes:
      - mysql_container:/var/lib/mysql

  # start the mongo service as container
  mongo:
    image: mongo:latest
    container_name: mongodb
    restart: always
    ports:
      - '27018:27017'
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password
    volumes:
      - mongodb_data_container:/data/db

volumes:
  mysql_container:
  mongodb_data_container:
